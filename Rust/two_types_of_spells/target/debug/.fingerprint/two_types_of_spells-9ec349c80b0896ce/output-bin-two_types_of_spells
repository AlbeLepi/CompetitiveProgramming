{"message":"`if` chain can be rewritten with `match`","code":{"code":"clippy::comparison_chain","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":557,"byte_end":2683,"line_start":12,"line_end":57,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"        if line[1] > 0 {","highlight_start":9,"highlight_end":25},{"text":"            damage += line[1];  spells.insert((line[1],line[0]==1));","highlight_start":1,"highlight_end":69},{"text":"            if line[0] == 1 {","highlight_start":1,"highlight_end":30},{"text":"                doubles += 1;","highlight_start":1,"highlight_end":30},{"text":"                if doubles == 1 {//initialize the treshold","highlight_start":1,"highlight_end":59},{"text":"                    tresh = *spells.range(..).next_back().unwrap();","highlight_start":1,"highlight_end":68},{"text":"                    if tresh.1 {doubleones += 1;}","highlight_start":1,"highlight_end":50},{"text":"                    damage += tresh.0;","highlight_start":1,"highlight_end":39},{"text":"                } else if line[1] > tresh.0 {//the new spell gets doubled","highlight_start":1,"highlight_end":74},{"text":"                    doubleones += 1;","highlight_start":1,"highlight_end":37},{"text":"                    damage += line[1];","highlight_start":1,"highlight_end":39},{"text":"                } else {//another spell gets doubled","highlight_start":1,"highlight_end":53},{"text":"                    tresh = *spells.range(..tresh).next_back().unwrap();","highlight_start":1,"highlight_end":73},{"text":"                    if tresh.1 {doubleones += 1;}","highlight_start":1,"highlight_end":50},{"text":"                    damage += tresh.0;","highlight_start":1,"highlight_end":39},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            } else if line[0] == 0 && doubles > 0 && line[1] > tresh.0 {","highlight_start":1,"highlight_end":73},{"text":"                damage -= tresh.0;//forget the weakest doubled spell","highlight_start":1,"highlight_end":69},{"text":"                if tresh.1 {doubleones -= 1;}","highlight_start":1,"highlight_end":46},{"text":"                tresh = *spells.range((tresh.0+1,false)..).next().unwrap();","highlight_start":1,"highlight_end":76},{"text":"                damage += line[1];//doubles this spell","highlight_start":1,"highlight_end":55},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        } else if line[1] < 0 {","highlight_start":1,"highlight_end":32},{"text":"            line[1] = -line[1];","highlight_start":1,"highlight_end":32},{"text":"            damage -= line[1];  spells.remove(&(line[1], line[0]==1));","highlight_start":1,"highlight_end":71},{"text":"            if line[0] == 1 {","highlight_start":1,"highlight_end":30},{"text":"                doubles -= 1;","highlight_start":1,"highlight_end":30},{"text":"                if doubles == 0 {//forget the only doubled spell","highlight_start":1,"highlight_end":65},{"text":"                    if tresh.1 {doubleones -= 1;}","highlight_start":1,"highlight_end":50},{"text":"                    damage -= tresh.0;","highlight_start":1,"highlight_end":39},{"text":"                } else if line[1] > tresh.0 {//the forgotten spell was doubled","highlight_start":1,"highlight_end":79},{"text":"                    doubleones -= 1;","highlight_start":1,"highlight_end":37},{"text":"                    damage -= line[1];","highlight_start":1,"highlight_end":39},{"text":"                } else {//another doubled spell gets forgotten","highlight_start":1,"highlight_end":63},{"text":"                    if tresh.1 {doubleones -= 1;}","highlight_start":1,"highlight_end":50},{"text":"                    damage -= tresh.0;","highlight_start":1,"highlight_end":39},{"text":"                    tresh = *spells.range((tresh.0+1,false)..).next().unwrap();","highlight_start":1,"highlight_end":80},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            else if line[0] == 0 && doubles > 0 && line[1] >= tresh.0 {","highlight_start":1,"highlight_end":72},{"text":"                damage -= line[1];","highlight_start":1,"highlight_end":35},{"text":"                tresh = *spells.range(..tresh).next_back().unwrap();","highlight_start":1,"highlight_end":69},{"text":"                if tresh.1 {doubleones += 1;}","highlight_start":1,"highlight_end":46},{"text":"                damage += tresh.0;","highlight_start":1,"highlight_end":35},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(clippy::comparison_chain)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider rewriting the `if` chain to use `cmp` and `match`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: `if` chain can be rewritten with `match`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:12:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if line[1] > 0 {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            damage += line[1];  spells.insert((line[1],line[0]==1));\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            if line[0] == 1 {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                doubles += 1;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m57\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m|_________^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(clippy::comparison_chain)]` on by default\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: consider rewriting the `if` chain to use `cmp` and `match`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain\u001b[0m\n\n"}
{"message":"1 warning emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: 1 warning emitted\u001b[0m\n\n"}
